<% if (title) { %><% } %>

<h1><%= title %></h1>
<%- messages() %> <% if (errors) { %>
<ul class="notice">
  <% errors.array().forEach(error => { %>
  <li><%= error.msg %></li>
  <% }) %>
</ul>
<% } %>

<div class="register-container">
  <form
    action="/account/register"
    method="post"
    class="registration-form"
    id="registrationForm"
  >
    <p>All fields are required</p>
    <div class="form-group">
      <label for="account_firstname">First name:</label>
      <input
        type="text"
        id="account_firstname"
        name="account_firstname"
        placeholder="Enter your first name"
        required
        value="<%= locals.account_firstname %>"
        class="validation-input"
      />
    </div>

    <div class="form-group">
      <label for="account_lastname">Last name:</label>
      <input
        type="text"
        id="account_lastname"
        name="account_lastname"
        placeholder="Enter your last name"
        required
        value="<%= locals.account_lastname || '' %>"
        class="validation-input"
      />
    </div>

    <div class="form-group">
      <label for="account_email">Email Address:</label>
      <input
        type="email"
        id="account_email"
        name="account_email"
        placeholder="Enter your email address"
        required
        value="<%= locals.account_email || '' %>"
        class="validation-input"
      />
    </div>

    <div class="form-group password-group">
      <label for="account_password">Password:</label>
      <div class="password-input-container">
        <input
          type="password"
          id="account_password"
          name="account_password"
          placeholder="Enter your password"
          pattern="^(?=.*\d)(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{12,}$"
          required
          class="validation-input"
        />
        <button
          type="button"
          id="pswdBtn"
          class="btn btn-secondary show-password-btn"
        >
          Show Password
        </button>
      </div>
      <p class="password-requirements">
        Passwords must be a minimum of 12 characters and include 1 capital
        letter, 1 number and 1 special character
      </p>
    </div>

    <div class="form-group">
      <button type="submit" class="btn btn-primary">Register</button>
    </div>
  </form>

  <div class="login-link">
    <p>
      Already have an account?
      <a href="/account/login" title="Log in to your account">Login</a>
    </p>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("registrationForm");
    const inputs = form.querySelectorAll(".validation-input");

    // Function to validate a field and apply visual feedback
    function validateField(field) {
      // Remove existing validation classes
      field.classList.remove("valid", "invalid");

      // Check if field meets requirements
      if (field.checkValidity()) {
        field.classList.add("valid");
      } else {
        field.classList.add("invalid");
      }
    }

    // Add real-time validation to all input fields
    inputs.forEach((input) => {
      // Initial validation on page load
      validateField(input);

      // Validate when user types
      input.addEventListener("input", function () {
        validateField(this);
      });

      // Validate when user leaves the field
      input.addEventListener("blur", function () {
        validateField(this);
      });

      // Also validate on invalid event (when browser shows error)
      input.addEventListener("invalid", function () {
        validateField(this);
      });
    });

    // Re-validate all fields when form is submitted (to catch any missed ones)
    form.addEventListener("submit", function () {
      inputs.forEach((input) => {
        validateField(input);
      });
    });

    // Apply initial validation if there were server-side errors
    const hasServerErrors = document.querySelector(".notice") !== null;
    if (hasServerErrors) {
      // Small delay to ensure DOM is fully ready
      setTimeout(() => {
        inputs.forEach((input) => {
          validateField(input);
        });
      }, 100);
    }
  });

  // Existing password show/hide functionality
  const pswdBtn = document.querySelector("#pswdBtn");
  if (pswdBtn) {
    pswdBtn.addEventListener("click", function () {
      const pswdInput = document.getElementById("account_password");
      const type = pswdInput.getAttribute("type");
      if (type == "password") {
        pswdInput.setAttribute("type", "text");
        pswdBtn.innerHTML = "Hide Password";
      } else {
        pswdInput.setAttribute("type", "password");
        pswdBtn.innerHTML = "Show Password";
      }
    });
  }
</script>
